!function(){"use strict";var n={454:function(n,e,t){var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".doubly-linked-list {\r\n  --tail-color: rgb(126, 9, 9);\r\n  --head-color: teal;\r\n}\r\n\r\n.doubly-linked-list .app-container {\r\n  max-width: 960px;\r\n}\r\n\r\n.doubly-linked-list .app-container .box {\r\n  width: 100%;\r\n}\r\n\r\n.doubly-linked-list .app-container .box_container::before {\r\n  content: attr(before-text);\r\n  white-space: break-spaces;\r\n}\r\n\r\n.doubly-linked-list .app-container .box_container {\r\n  height: 150px;\r\n  max-width: unset;\r\n  width: 80%;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:first-child .box-item-text {\r\n  color: var(--head-color);\r\n  font-weight: bold;\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child {\r\n  flex: 1;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child .box-item-text {\r\n  color: var(--tail-color);\r\n  font-weight: bold;\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child .icon-arrow-right {\r\n  flex: 1;\r\n}\r\n\r\n.doubly-linked-list .app-container .box__line {\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box\r\n  .box_item:first-child\r\n  .box-item-text::before {\r\n  content: 'Head';\r\n  position: absolute;\r\n  top: -28px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  font-weight: bold;\r\n  color: var(--head-color);\r\n}\r\n\r\n.doubly-linked-list .app-container .box-tail {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 35px;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container[before-text='null']\r\n  .box-tail {\r\n  border: 1px solid black;\r\n  min-width: 50px;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container:not([before-text='null'])\r\n  .box {\r\n  display: none;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container[before-text='null']\r\n  .box-tail {\r\n  display: none;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box\r\n  .box_item:last-child\r\n  .box-item-text::after {\r\n  content: 'Tail';\r\n  position: absolute;\r\n  bottom: -27px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  font-weight: bold;\r\n  width: max-content;\r\n  color: var(--tail-color);\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n  height: 35px;\r\n  border: none;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item > * {\r\n  height: 35px;\r\n  line-height: 35px;\r\n  padding: 0 4px;\r\n  min-width: 40px;\r\n  border: 1px solid #333;\r\n}\r\n","",{version:3,sources:["webpack://./src/projects/js_doubly_linked_list/doubly_linked_list.css"],names:[],mappings:"AAAA;EACE,4BAA4B;EAC5B,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,0BAA0B;EAC1B,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;;;;EAKE,eAAe;EACf,kBAAkB;EAClB,UAAU;EACV,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,OAAO;EACP,aAAa;EACb,mBAAmB;EACnB,YAAY;AACd;;AAEA;;;;EAIE,uBAAuB;EACvB,eAAe;AACjB;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;;EAKE,eAAe;EACf,kBAAkB;EAClB,aAAa;EACb,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,UAAU;EACV,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,cAAc;EACd,eAAe;EACf,sBAAsB;AACxB",sourcesContent:[".doubly-linked-list {\r\n  --tail-color: rgb(126, 9, 9);\r\n  --head-color: teal;\r\n}\r\n\r\n.doubly-linked-list .app-container {\r\n  max-width: 960px;\r\n}\r\n\r\n.doubly-linked-list .app-container .box {\r\n  width: 100%;\r\n}\r\n\r\n.doubly-linked-list .app-container .box_container::before {\r\n  content: attr(before-text);\r\n  white-space: break-spaces;\r\n}\r\n\r\n.doubly-linked-list .app-container .box_container {\r\n  height: 150px;\r\n  max-width: unset;\r\n  width: 80%;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:first-child .box-item-text {\r\n  color: var(--head-color);\r\n  font-weight: bold;\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child {\r\n  flex: 1;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child .box-item-text {\r\n  color: var(--tail-color);\r\n  font-weight: bold;\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:last-child .icon-arrow-right {\r\n  flex: 1;\r\n}\r\n\r\n.doubly-linked-list .app-container .box__line {\r\n  position: relative;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box\r\n  .box_item:first-child\r\n  .box-item-text::before {\r\n  content: 'Head';\r\n  position: absolute;\r\n  top: -28px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  font-weight: bold;\r\n  color: var(--head-color);\r\n}\r\n\r\n.doubly-linked-list .app-container .box-tail {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 35px;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container[before-text='null']\r\n  .box-tail {\r\n  border: 1px solid black;\r\n  min-width: 50px;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container:not([before-text='null'])\r\n  .box {\r\n  display: none;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box_container[before-text='null']\r\n  .box-tail {\r\n  display: none;\r\n}\r\n\r\n.doubly-linked-list\r\n  .app-container\r\n  .box\r\n  .box_item:last-child\r\n  .box-item-text::after {\r\n  content: 'Tail';\r\n  position: absolute;\r\n  bottom: -27px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  font-weight: bold;\r\n  width: max-content;\r\n  color: var(--tail-color);\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n  height: 35px;\r\n  border: none;\r\n}\r\n\r\n.doubly-linked-list .app-container .box .box_item > * {\r\n  height: 35px;\r\n  line-height: 35px;\r\n  padding: 0 4px;\r\n  min-width: 40px;\r\n  border: 1px solid #333;\r\n}\r\n"],sourceRoot:""}]),e.Z=a},738:function(n,e,t){var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody > main,\r\nbody > .main {\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 40px auto;\r\n}\r\n\r\n* {\r\n  outline: none;\r\n}\r\n\r\n.app-container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  background-color: #f2f2f2;\r\n  padding: 30px;\r\n}\r\n\r\n.app-container h1 {\r\n  text-align: center;\r\n}\r\n\r\n.app-container .box_container {\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  height: 300px;\r\n  background-color: white;\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.app-container .box {\r\n  overflow: auto;\r\n}\r\n\r\n.app-container .box .box_item {\r\n  border: 1px solid black;\r\n  padding: 4px 80px;\r\n  text-align: center;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.app-container .box .box_item.peeking {\r\n  background-color: #333;\r\n  color: white;\r\n}\r\n\r\n.app-container .buttons-container {\r\n  max-width: max-content;\r\n  margin: 30px auto 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.icon::before {\r\n  display: inline-block;\r\n  font-style: normal;\r\n  font-variant: normal;\r\n  text-rendering: auto;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n.icon.icon-arrow-right::before {\r\n  font-family: 'Font Awesome 5 Free', sans-serif;\r\n  font-weight: 900;\r\n  content: '\\f061';\r\n}\r\n\r\n.icon.icon-arrow-left::before {\r\n  font-family: 'Font Awesome 5 Free', sans-serif;\r\n  font-weight: 900;\r\n  content: '\\f060';\r\n}\r\n","",{version:3,sources:["webpack://./src/styles/globals.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,YAAY;EACZ,SAAS;EACT,UAAU;AACZ;;AAEA;;EAEE,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,yBAAyB;EACzB,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,wBAAwB;EACxB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,oBAAoB;EACpB,oBAAoB;EACpB,mCAAmC;AACrC;;AAEA;EACE,8CAA8C;EAC9C,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,8CAA8C;EAC9C,gBAAgB;EAChB,gBAAgB;AAClB",sourcesContent:["html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody > main,\r\nbody > .main {\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 40px auto;\r\n}\r\n\r\n* {\r\n  outline: none;\r\n}\r\n\r\n.app-container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  background-color: #f2f2f2;\r\n  padding: 30px;\r\n}\r\n\r\n.app-container h1 {\r\n  text-align: center;\r\n}\r\n\r\n.app-container .box_container {\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  height: 300px;\r\n  background-color: white;\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.app-container .box {\r\n  overflow: auto;\r\n}\r\n\r\n.app-container .box .box_item {\r\n  border: 1px solid black;\r\n  padding: 4px 80px;\r\n  text-align: center;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.app-container .box .box_item.peeking {\r\n  background-color: #333;\r\n  color: white;\r\n}\r\n\r\n.app-container .buttons-container {\r\n  max-width: max-content;\r\n  margin: 30px auto 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.icon::before {\r\n  display: inline-block;\r\n  font-style: normal;\r\n  font-variant: normal;\r\n  text-rendering: auto;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n.icon.icon-arrow-right::before {\r\n  font-family: 'Font Awesome 5 Free', sans-serif;\r\n  font-weight: 900;\r\n  content: '\\f061';\r\n}\r\n\r\n.icon.icon-arrow-left::before {\r\n  font-family: 'Font Awesome 5 Free', sans-serif;\r\n  font-weight: 900;\r\n  content: '\\f060';\r\n}\r\n"],sourceRoot:""}]),e.Z=a},467:function(n,e,t){var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".app-container .box_container {\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  width: 400px;\n  max-width: 400px;\n  position: relative;\n}\n\n.app-container .box {\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  height: 100%;\n}\n\n.app-container .box__line {\n  background: black;\n  flex: 1;\n  height: 2px;\n  margin-left: 4px;\n}\n\n.app-container .box .box_item {\n  padding: 8px;\n  position: relative;\n  margin-left: 20px;\n  transition: all ease 0.2s;\n}\n\n.app-container .box_container::before,\n.app-container .box_container::after {\n  font-weight: bold;\n  color: #333;\n  position: absolute;\n}\n.app-container .box_container::before {\n  content: 'Head';\n  left: -50px;\n}\n.app-container .box_container::after {\n  content: 'null';\n  right: -50px;\n}\n\n.app-container .buttons-container {\n  flex-direction: column;\n}\n.app-container .buttons-container .btn-group {\n  margin: 10px auto;\n}\n\nsection {\n  margin: 20px auto;\n}\n","",{version:3,sources:["webpack://./src/styles/linked_list.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,OAAO;EACP,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;;EAEE,iBAAiB;EACjB,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,eAAe;EACf,WAAW;AACb;AACA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:[".app-container .box_container {\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  width: 400px;\n  max-width: 400px;\n  position: relative;\n}\n\n.app-container .box {\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  height: 100%;\n}\n\n.app-container .box__line {\n  background: black;\n  flex: 1;\n  height: 2px;\n  margin-left: 4px;\n}\n\n.app-container .box .box_item {\n  padding: 8px;\n  position: relative;\n  margin-left: 20px;\n  transition: all ease 0.2s;\n}\n\n.app-container .box_container::before,\n.app-container .box_container::after {\n  font-weight: bold;\n  color: #333;\n  position: absolute;\n}\n.app-container .box_container::before {\n  content: 'Head';\n  left: -50px;\n}\n.app-container .box_container::after {\n  content: 'null';\n  right: -50px;\n}\n\n.app-container .buttons-container {\n  flex-direction: column;\n}\n.app-container .buttons-container .btn-group {\n  margin: 10px auto;\n}\n\nsection {\n  margin: 20px auto;\n}\n"],sourceRoot:""}]),e.Z=a},645:function(n){n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&o[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:function(n){function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,o=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var r,o,i=[],a=!0,l=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(n){l=!0,o=n}finally{try{a||null==t.return||t.return()}finally{if(l)throw o}}return i}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),c="/*# ".concat(A," */"),s=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(s).concat([c]).join("\n")}return[i].join("\n")}},379:function(n,e,t){var r,o=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),i=[];function a(n){for(var e=-1,t=0;t<i.length;t++)if(i[t].identifier===n){e=t;break}return e}function l(n,e){for(var t={},r=[],o=0;o<n.length;o++){var l=n[o],A=e.base?l[0]+e.base:l[0],c=t[A]||0,s="".concat(A," ").concat(c);t[A]=c+1;var u=a(s),p={css:l[1],media:l[2],sourceMap:l[3]};-1!==u?(i[u].references++,i[u].updater(p)):i.push({identifier:s,updater:h(p,e),references:1}),r.push(s)}return r}function A(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var i=t.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var a=o(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,s=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function u(n,e,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(n.styleSheet)n.styleSheet.cssText=s(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function p(n,e,t){var r=t.css,o=t.media,i=t.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var d=null,f=0;function h(n,e){var t,r,o;if(e.singleton){var i=f++;t=d||(d=A(e)),r=u.bind(null,t,i,!1),o=u.bind(null,t,i,!0)}else t=A(e),r=p.bind(null,t,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=l(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var r=0;r<t.length;r++){var o=a(t[r]);i[o].references--}for(var A=l(n,e),c=0;c<t.length;c++){var s=a(t[c]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}t=A}}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,{a:e}),e},t.d=function(n,e){for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},function(){var n=t(379),e=t.n(n),r=t(738),o=(e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals,t(467)),i=(e()(o.Z,{insert:"head",singleton:!1}),o.Z.locals,t(454));function a(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function l(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}e()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var A=function(n,e){return n===e},c=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;l(this,n),this.element=e,this.next=t};function s(n){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function u(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function p(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function d(n,e,t){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(n,e,t){var r=function(n,e){for(;!Object.prototype.hasOwnProperty.call(n,e)&&null!==(n=b(n)););return n}(n,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(t):o.value}})(n,e,t||n)}function f(n,e){return(f=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function h(n,e){return!e||"object"!==s(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function b(n){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var x,m,E,B,y,g,v,C,k,w,_,j,O=function(n){var e=document.querySelector(".box");e.querySelectorAll(".box_item").forEach((function(n){return n.remove()})),document.querySelector(".box_container").setAttribute("before-text",n.size()>0?"null":"Head\nTail"),console.log(n);var t=n.head;if(null!==n.head)for(var r=0;r<n.size()&&null!==t;r++){var o=document.createElement("DIV");o.classList.add("box_item"),o.innerHTML='\n      <div class="icon icon-arrow-left">\n      </div>\n      <div class="box-item-text">'.concat(t.element,'</div>\n      <div class="icon icon-arrow-right">\n      </div>\n    '),e.append(o),t=t.next}},S=new(function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&f(n,e)}(a,n);var e,t,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,e=b(r);if(o){var t=b(this).constructor;n=Reflect.construct(e,arguments,t)}else n=e.apply(this,arguments);return h(this,n)});function a(){var n,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:A;return u(this,a),(n=i.call(this,e)).tail=null,n}return e=a,(t=[{key:"push",value:function(n){var e=d(b(a.prototype),"getElementAt",this).call(this,this.size()-1),t=d(b(a.prototype),"push",this).call(this,n);t.previous=e||null,this.tail=t}},{key:"insertAt",value:function(n,e){if(e<0||e>this.size())return!1;var t=this.head;if(0===e){var r=new c(n);return r.previous=null,null===this.head?(this.head=r,this.tail=r):(r.next=t,t.previous=r,this.head=r),this.count++,r}if(e===this.size())return this.push(n);var o=d(b(a.prototype),"getElementAt",this).call(this,e-1),i=d(b(a.prototype),"getElementAt",this).call(this,e),l=d(b(a.prototype),"insertAt",this).call(this,n,e);return l.previous=o||null,i.previous=l,l}},{key:"removeAt",value:function(n){if(n<0||n>=this.size())return!1;var e,t=d(b(a.prototype),"getElementAt",this).call(this,n-1);return 0===n?(e=d(b(a.prototype),"removeAt",this).call(this,n),0===this.size()?this.tail=null:this.head.previous=null):n===this.size()-1?(e=d(b(a.prototype),"removeAt",this).call(this,n),this.tail=t,this.tail.next=null):(e=d(b(a.prototype),"removeAt",this).call(this,n),t.next=e.next,e.next.previous=t),e}},{key:"clear",value:function(){d(b(a.prototype),"clear",this).call(this),this.tail=null}}])&&p(e.prototype,t),a}(function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:A;l(this,n),this.head=null,this.count=0,this.equalsFn=e}var e,t;return e=n,(t=[{key:"push",value:function(n){var e,t=new c(n);if(null===this.head)this.head=t;else{for(e=this.head;null!==e.next;)e=e.next;e.next=t}return this.count++,t}},{key:"removeAt",value:function(n){if(!(n<0||n>=this.size())){var e=this.head;if(0===n)this.head=e.next;else{var t=this.getElementAt(n-1);e=t.next,t.next=e.next}return this.count--,e}}},{key:"getElementAt",value:function(n){if(!(n<0||n>this.size())){for(var e=this.head,t=0;t<n&&null!==e;t++)e=e.next;return e}}},{key:"insertAt",value:function(n,e){if(!(e<0||e>this.size())){var t=new c(n);if(0===e){var r=this.head;t.next=r,this.head=t}else{var o=this.getElementAt(e-1),i=o.next;t.next=i,o.next=t}return this.count++,t}}},{key:"indexOf",value:function(n){for(var e=this.head,t=0;t<this.size()&&null!==e;t++){if(this.equalsFn(n,e.element))return t;e=e.next}return-1}},{key:"remove",value:function(n){var e=this.indexOf(n);return this.removeAt(e)}},{key:"clear",value:function(){this.head=null,this.count=0}},{key:"size",value:function(){return this.count}},{key:"isEmpty",value:function(){return 0===this.size()}},{key:"getHead",value:function(){return this.head}},{key:"toString",value:function(){if(this.isEmpty())return"";for(var n=[],e=this.head,t=0;t<this.size()&&null!==e;t++)n.push(e.element),e=e.next;return n.join(", ")}}])&&a(e.prototype,t),n}()));S.push("22"),S.push("33"),S.push("abc"),S.push("xyz"),x=S,m=O,E=document.querySelector("#pushBtn"),B=document.querySelector("#insertAtBtn"),y=document.querySelector("#removeElementBtn"),g=document.querySelector("#getElementAtBtn"),v=document.querySelector("#indexOfBtn"),C=document.querySelector("#removeElementAtBtn"),k=document.querySelector("#toStringBtn"),w=document.querySelector("#sizeBtn"),_=document.querySelector("#isEmptyBtn"),j=document.querySelector("#clearBtn"),E.addEventListener("click",(function(){var n=prompt("Enter element to add to linkedlist");x.push(n),m(x)})),y.addEventListener("click",(function(){var n=prompt("Enter element to remove from linkedlist");x.remove(n)?(alert("Element removed"),m(x)):alert("Element not found")})),B.addEventListener("click",(function(){var n=prompt("Enter element to add to linkedlist"),e=prompt("Enter the index the element is to be added at");x.insertAt(n,Number(e)),m(x)})),g.addEventListener("click",(function(){var n=prompt("Enter the index the element is to be retrieved from"),e=x.getElementAt(Number(n));e?alert("Element retrieved = ".concat(e.element)):alert("Element not found")})),C.addEventListener("click",(function(){var n=prompt("Enter the index the element is to be removed from");x.removeAt(Number(n))?(alert("Element removed"),m(x)):alert("Element not found")})),v.addEventListener("click",(function(){var n=prompt("Enter element you want to find index of"),e=x.indexOf(n);e>=0?alert("Index of element '".concat(n,"' is ").concat(e)):alert("Element not found")})),k.addEventListener("click",(function(){alert(x.toString())})),w.addEventListener("click",(function(){alert("The size of the linked list is ".concat(x.size()))})),_.addEventListener("click",(function(){alert("Linked list is".concat(x.isEmpty()?"":" not"," empty"))})),j.addEventListener("click",(function(){x.clear(),alert("Linked list cleared"),m(x)})),O(S)}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,